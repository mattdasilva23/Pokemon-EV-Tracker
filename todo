
EV Tracker Issues, Features and Bugs:

General:
✓ Backup file before a save.
✓ Configurable tracker file location through --infile flag.
✓ Switch the EvDict to a separate pokedex module (pokedex branch)
	✓ Use a better data format than csv
	✓ Load EV data for pokemon from sqlite backend.
	✓ Implement ev-tracker.py using the pokemon, pokedex modules.
- Support for multiple forms, i.e. Meloetta, Wormadam etc.
- Implement lazy loading of tracker data (i.e. for ev, help command)
- Ditch automatically active tracked Pokemon.

Commands:
✓ ev
✓ list
✓ current
- track
	✓ species
	✓ name
	✓ pokerus
	- item
- update
	- species
	- name
	- pokerus
	✓ item

Potential features:
- history - record past battles/changes for a pokemon.
- undo - undo the previous command.
- Add an "interactive" mode for continuous input.
✓ Python 3.0 compatability - should be easy since all dependencies are from the standard library. MDS EDIT: yes they are thank you

-------------------------------------------------------------------------------------------------------------------

MDS TO DO LIST:
---------------

✓ Status
✓ Battle
	✓ Ev update
	✓ Multiple at once
	- Undo battle (subtract EVs) (this doesn't work when stat is maxed) - proper way to do undo is to physically save each EV stat
✓ History
	✓ Add to history
	✓ Remove from history
	✓ For each tracked pokemon
	✓ Date timestamp
	✓ Supports items
	- Pokerus (maybe do this althought very rare)
- Item
	✓ Item functionality
	- EXP share will be a tricky one, 2 pokemon evs in one battle
- Vitamins
- Update
- Update README.md with new changes
✓ Overview








Potential Features:
-------------------

- maybe make history also by pokemon name, rather than just using pokemon id
- level 1 to 100 EVS calculation
✓ overview command that prints status + history etc
- Evs between 0-510 (255 max stat) - data validation basically
- Breakdown of where Evs came from (get this from history)
- import history to another pokemon (in case file deleted)
- code need a general clean up e.g. history.activePokeID could be coded better
- double battles?
- history file saves id first then date, maybe switch around (not that important)
- berries


Bugs:
-----

- when you delete / empty the history file, everything breaks
- when you add multiple pokemon, the history will calculate evs wrong


Notes:
------

- the history file json format is not ideal - realistically you would have a battle history and then an item history in 2 separate files prob